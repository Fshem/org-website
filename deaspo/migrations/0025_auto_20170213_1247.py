# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2017-02-13 09:47
from __future__ import unicode_literals

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('deaspo', '0024_auto_20170102_2120'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hosting_plan', models.CharField(max_length=100)),
                ('hosting_start_price', models.DecimalField(decimal_places=2, max_digits=7, validators=[
                    django.core.validators.MinValueValidator(limit_value=0, message='Negatives not allowed')])),
                ('fname', models.CharField(max_length=100)),
                ('cname', models.CharField(max_length=100)),
                ('sname', models.CharField(max_length=100)),
                ('zcode', models.IntegerField(validators=[
                    django.core.validators.MinLengthValidator(limit_value=5, message='Enter the correct code'),
                    django.core.validators.MaxLengthValidator(limit_value=5, message='Enter the correct code'),
                    django.core.validators.MinValueValidator(limit_value=0, message='Cannot be negative')])),
                ('city', models.CharField(max_length=100)),
                ('country',
                 models.CharField(choices=[('A', 'Kenya'), ('B', 'Others')], default='Kenya', max_length=100)),
                ('pnumber', models.IntegerField(validators=[
                    django.core.validators.MinLengthValidator(limit_value=10, message='Enter the correct code'),
                    django.core.validators.MaxLengthValidator(limit_value=10, message='Enter the correct code'),
                    django.core.validators.MinValueValidator(limit_value=0, message='Cannot be negative')])),
                ('email', models.EmailField(max_length=254, validators=[
                    django.core.validators.EmailValidator(message='Invalid email address')])),
            ],
        ),
        migrations.CreateModel(
            name='DesktopOrders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hosting_plan', models.CharField(max_length=100)),
                ('hosting_start_price', models.DecimalField(decimal_places=2, max_digits=7, validators=[
                    django.core.validators.MinValueValidator(limit_value=0, message='Negatives not allowed')])),
                ('fname', models.CharField(max_length=100)),
                ('cname', models.CharField(max_length=100)),
                ('sname', models.CharField(max_length=100)),
                ('zcode', models.IntegerField(validators=[
                    django.core.validators.MinLengthValidator(limit_value=5, message='Enter the correct code'),
                    django.core.validators.MaxLengthValidator(limit_value=5, message='Enter the correct code'),
                    django.core.validators.MinValueValidator(limit_value=0, message='Cannot be negative')])),
                ('city', models.CharField(max_length=100)),
                ('country',
                 models.CharField(choices=[('A', 'Kenya'), ('B', 'Others')], default='Kenya', max_length=100)),
                ('pnumber', models.IntegerField(validators=[
                    django.core.validators.MinLengthValidator(limit_value=10, message='Enter the correct code'),
                    django.core.validators.MaxLengthValidator(limit_value=10, message='Enter the correct code'),
                    django.core.validators.MinValueValidator(limit_value=0, message='Cannot be negative')])),
                ('email', models.EmailField(max_length=254, validators=[
                    django.core.validators.EmailValidator(message='Invalid email address')])),
                ('platform', models.CharField(choices=[('A', 'Windows'), ('B', 'Linus Services')], default='Windows',
                                              max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='MobileOrders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hosting_plan', models.CharField(max_length=100)),
                ('hosting_start_price', models.DecimalField(decimal_places=2, max_digits=7, validators=[
                    django.core.validators.MinValueValidator(limit_value=0, message='Negatives not allowed')])),
                ('fname', models.CharField(max_length=100)),
                ('cname', models.CharField(max_length=100)),
                ('sname', models.CharField(max_length=100)),
                ('zcode', models.IntegerField(validators=[
                    django.core.validators.MinLengthValidator(limit_value=5, message='Enter the correct code'),
                    django.core.validators.MaxLengthValidator(limit_value=5, message='Enter the correct code'),
                    django.core.validators.MinValueValidator(limit_value=0, message='Cannot be negative')])),
                ('city', models.CharField(max_length=100)),
                ('country',
                 models.CharField(choices=[('A', 'Kenya'), ('B', 'Others')], default='Kenya', max_length=100)),
                ('pnumber', models.IntegerField(validators=[
                    django.core.validators.MinLengthValidator(limit_value=10, message='Enter the correct code'),
                    django.core.validators.MaxLengthValidator(limit_value=10, message='Enter the correct code'),
                    django.core.validators.MinValueValidator(limit_value=0, message='Cannot be negative')])),
                ('email', models.EmailField(max_length=254, validators=[
                    django.core.validators.EmailValidator(message='Invalid email address')])),
                ('platform',
                 models.CharField(choices=[('A', 'Windows'), ('B', 'Android'), ('C', 'Both')], default='Android',
                                  max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='OrderAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hosting_plan', models.CharField(max_length=100)),
                ('hosting_plan_price', models.DecimalField(decimal_places=2, max_digits=7, validators=[
                    django.core.validators.MinValueValidator(limit_value=0, message='Negatives not allowed')])),
                ('fname', models.CharField(max_length=100)),
                ('cname', models.CharField(max_length=100)),
                ('sname', models.CharField(max_length=100)),
                ('zcode', models.IntegerField(validators=[
                    django.core.validators.MinLengthValidator(limit_value=5, message='Enter the correct code'),
                    django.core.validators.MaxLengthValidator(limit_value=5, message='Enter the correct code'),
                    django.core.validators.MinValueValidator(limit_value=0, message='Cannot be negative')])),
                ('city', models.CharField(max_length=100)),
                ('country',
                 models.CharField(choices=[('A', 'Kenya'), ('B', 'Others')], default='Kenya', max_length=100)),
                ('pnumber', models.IntegerField(validators=[
                    django.core.validators.MinLengthValidator(limit_value=10, message='Enter the correct code'),
                    django.core.validators.MaxLengthValidator(limit_value=10, message='Enter the correct code'),
                    django.core.validators.MinValueValidator(limit_value=0, message='Cannot be negative')])),
                ('email', models.EmailField(max_length=254, validators=[
                    django.core.validators.EmailValidator(message='Invalid email address')])),
                ('dname', models.BooleanField(default=True)),
                ('edomain', models.BooleanField(default=False)),
                ('app', models.BooleanField(default=False)),
                ('dprice', models.DecimalField(decimal_places=2, default=2500, max_digits=7, validators=[
                    django.core.validators.MinValueValidator(limit_value=0, message='Negatives not allowed')])),
                ('eprice', models.DecimalField(decimal_places=2, default=12000, max_digits=7, validators=[
                    django.core.validators.MinValueValidator(limit_value=0, message='Negatives not allowed')])),
                ('aprice', models.DecimalField(decimal_places=2, default=7500, max_digits=7, validators=[
                    django.core.validators.MinValueValidator(limit_value=0, message='Negatives not allowed')])),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='p_mobile_android',
            field=models.TextField(blank=True, max_length=1500),
        ),
        migrations.AddField(
            model_name='product',
            name='p_mobile_windows',
            field=models.TextField(blank=True, max_length=1500),
        ),
        migrations.AddField(
            model_name='product',
            name='p_mstart_price',
            field=models.DecimalField(decimal_places=2, default=7500, max_digits=7),
        ),
        migrations.AddField(
            model_name='project',
            name='address',
            field=models.URLField(default=''),
        ),
        migrations.AlterField(
            model_name='plan',
            name='pn_yearly',
            field=models.DecimalField(decimal_places=2, default=25000, max_digits=7),
        ),
        migrations.AlterField(
            model_name='product',
            name='pintro',
            field=models.CharField(default='Brief intro', max_length=200),
        ),
        migrations.AlterField(
            model_name='product',
            name='plan',
            field=models.ManyToManyField(blank=True, to='deaspo.Plan'),
        ),
        migrations.AlterField(
            model_name='productweborder',
            name='posted_date',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='social',
            name='Link to profile',
            field=models.URLField(blank=True),
        ),
        migrations.AlterField(
            model_name='usernext',
            name='create_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
    ]
